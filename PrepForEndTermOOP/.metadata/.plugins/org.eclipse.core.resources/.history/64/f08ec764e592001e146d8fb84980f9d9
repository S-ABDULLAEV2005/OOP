package ComparableInterface;

import java.util.*;

public class Compare implements Comparable<Person> {
    private String name;
    private int age;

    // Constructors, getters, setters, and other methods

    // Implementing Comparable interface for natural ordering based on age
    @Override
    public int compareTo(Person otherPerson) {
        return Integer.compare(this.age, otherPerson.age);
    }

    // Custom Comparator for comparing persons based on name
    public static Comparator<Person> nameComparator = new Comparator<Person>() {
        @Override
        public int compare(Person person1, Person person2) {
            return person1.name.compareTo(person2.name);
        }
    };

    public static void main(String[] args) {
        List<Person> persons = new ArrayList<>();
        persons.add(new Person("Alice", 25));
        persons.add(new Person("Bob", 30));
        persons.add(new Person("Charlie", 22));

        // Sorting based on natural ordering (age)
        Collections.sort(persons);

        System.out.println("Sorted by Age:");
        for (Person person : persons) {
            System.out.println(person.getName() + " - Age: " + person.getAge());
        }

        // Sorting based on custom Comparator (name)
        Collections.sort(persons, Person.nameComparator);

        System.out.println("\nSorted by Name:");
        for (Person person : persons) {
            System.out.println(person.getName() + " - Age: " + person.getAge());
        }
    }
}
