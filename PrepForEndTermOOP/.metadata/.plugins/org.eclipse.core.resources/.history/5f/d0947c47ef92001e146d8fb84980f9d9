package my_pack;
import java.util.ArrayList;
import java.util.List;

// Person class
class Person {
    private String name;
    private String dateOfBirth;
    private String contactInfo;

    public Person(String name, String dateOfBirth, String contactInfo) {
        this.name = name;
        this.dateOfBirth = dateOfBirth;
        this.contactInfo = contactInfo;
    }

    public String getName() {
        return name;
    }

    public String getDateOfBirth() {
        return dateOfBirth;
    }

    public String getContactInfo() {
        return contactInfo;
    }
}

// Student class
class Student extends Person {
    private int studentId;
    private String major;
    private List<Course> enrolledCourses;

    public Student(String name, String dateOfBirth, String contactInfo, int studentId, String major) {
        super(name, dateOfBirth, contactInfo);
        this.studentId = studentId;
        this.major = major;
        this.enrolledCourses = new ArrayList<>();
    }

    public int getStudentId() {
        return studentId;
    }

    public String getMajor() {
        return major;
    }

    public List<Course> getEnrolledCourses() {
        return enrolledCourses;
    }

    public void enrollInCourse(Course course) {
        enrolledCourses.add(course);
    }
}

// Professor class
class Professor extends Person {
    private String employeeId;
    private String expertiseArea;

    public Professor(String name, String dateOfBirth, String contactInfo, String employeeId, String expertiseArea) {
        super(name, dateOfBirth, contactInfo);
        this.employeeId = employeeId;
        this.expertiseArea = expertiseArea;
    }

    public String getEmployeeId() {
        return employeeId;
    }

    public String getExpertiseArea() {
        return expertiseArea;
    }
}

// Course class
class Course {
    private String courseId;
    private String courseName;
    private String description;
    private List<Student> enrolledStudents;

    public Course(String courseId, String courseName, String description) {
        this.courseId = courseId;
        this.courseName = courseName;
        this.description = description;
        this.enrolledStudents = new ArrayList<>();
    }

    public String getCourseId() {
        return courseId;
    }

    public String getCourseName() {
        return courseName;
    }

    public String getDescription() {
        return description;
    }

    public List<Student> getEnrolledStudents() {
        return enrolledStudents;
    }

    public void enrollStudent(Student student) {
        enrolledStudents.add(student);
    }
}

// Department class
class Department {
    private String departmentId;
    private String departmentName;
    private List<Professor> professors;

    public Department(String departmentId, String departmentName) {
        this.departmentId = departmentId;
        this.departmentName = departmentName;
        this.professors = new ArrayList<>();
    }

    public String getDepartmentId() {
        return departmentId;
    }

    public String getDepartmentName() {
        return departmentName;
    }

    public List<Professor> getProfessors() {
        return professors;
    }

    public void addProfessor(Professor professor) {
        professors.add(professor);
    }
}

// Main class for testing
public class UniversityManagementSystem {
    public static void main(String[] args) {
        // Creating instances for testing
        Student student1 = new Student("John Doe", "1990-01-01", "john@example.com", 12345, "Computer Science");
        Professor professor1 = new Professor("Dr. Smith", "1965-05-15", "smith@example.com", "P001", "Computer Science");
        Course course1 = new Course("CS101", "Introduction to Programming", "Fundamentals of programming");

        // Enrolling student in the course
        course1.enrollStudent(student1);

        // Adding professor to the department
        Department computerScienceDepartment = new Department("D001", "Computer Science");
        computerScienceDepartment.addProfessor(professor1);

        // Displaying information
        System.out.println("Student Information:");
        System.out.println("Name: " + student1.getName());
        System.out.println("Date of Birth: " + student1.getDateOfBirth());
        System.out.println("Contact Information: " + student1.getContactInfo());
        System.out.println("Student ID: " + student1.getStudentId());
        System.out.println("Major: " + student1.getMajor());
        System.out.println("Enrolled Courses: " + student1.getEnrolledCourses());

        System.out.println("\nProfessor Information:");
        System.out.println("Name: " + professor1.getName());
        System.out.println("Date of Birth: " + professor1.getDateOfBirth());
        System.out.println("Contact Information: " + professor1.getContactInfo());
        System.out.println("Employee ID: " + professor1.getEmployeeId());
        System.out.println("Expertise Area: " + professor1.getExpertiseArea());

        System.out.println("\nCourse Information:");
        System.out.println("Course ID: " + course1.getCourseId());
        System.out.println("Course Name: " + course1.getCourseName());
        System.out.println("Description: " + course1.getDescription());
        System.out.println("Enrolled Students: " + course1.getEnrolledStudents());

        System.out.println("\nDepartment Information:");
        System.out.println("Department ID: " + computerScienceDepartment.getDepartmentId());
        System.out.println("Department Name: " + computerScienceDepartment.getDepartmentName());
        System.out.println("Professors: " + computerScienceDepartment.getProfessors());
    }
}

}
